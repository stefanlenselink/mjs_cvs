diff -d --new-file -r -c mpg123/common.c mpg123-patched/common.c
*** mpg123/common.c	Wed May 16 18:56:56 2001
--- mpg123-patched/common.c	Fri Oct 12 02:03:22 2001
***************
*** 25,30 ****
--- 25,31 ----
  #include "mpg123.h"
  #include "genre.h"
  #include "common.h"
+ #include "control_generic.h"
  
  int tabsel_123[2][3][16] = {
     { {0,32,64,96,128,160,192,224,256,288,320,352,384,416,448,},
***************
*** 119,124 ****
--- 120,126 ----
      fr->firsthead = 0;
      fr->thishead = 0;
      fr->freeformatsize = 0;
+     vbr=0;
  }
  
  int head_check(unsigned long head)
***************
*** 895,900 ****
--- 897,943 ----
  #if 0
      fflush(out); /* hmm not really nec. */
  #endif
+ }
+ 
+ void generic_print_stat(struct reader *rds,struct frame *fr,int no,long buffsize,struct audio_info_struct *ai)
+ {
+     double bpf,tpf,tim1,tim2;
+     double dt = 0.0;
+     int sno,rno;
+     char outbuf[256];
+ 
+     if(!rds || !fr) 
+ 	return;
+ 
+     outbuf[0] = 0;
+ 
+     /* bpf = compute_bpf(fr); */
+     bpf = vbr ? (rds->filelen / head.frames) : compute_bpf(fr);
+     tpf = compute_tpf(fr);
+ 
+     if(buffsize > 0 && ai && ai->rate > 0 && ai->channels > 0) {
+ 	dt = (double) buffsize / ai->rate / ai->channels;
+ 	if( (ai->format & AUDIO_FORMAT_MASK) == AUDIO_FORMAT_16)
+ 	    dt *= 0.5;
+     }
+ 
+     rno = 0;
+     sno = no;
+     if(rds->filelen >= 0) {
+ 	long t = rds->tell(rds);
+ 	rno = (int)((double)(rds->filelen-t)/bpf);
+ 	sno = (int)((double)t/bpf);
+     }
+ 
+     tim1 = sno*tpf-dt;
+     tim2 = rno*tpf+dt;
+ #if 0
+     tim1 = tim1 < 0 ? 0.0 : tim1;
+ #endif
+     tim2 = tim2 < 0 ? 0.0 : tim2;
+ 
+     generic_sendmsg("F %d %d %3.2f %3.2f %ld", sno, rno, tim1, tim2, (long)(8.0*bpf/tpf));
+ 
  }
  
  int get_songlen(struct reader *rds,struct frame *fr,int no)
diff -d --new-file -r -c mpg123/control_generic.c mpg123-patched/control_generic.c
*** mpg123/control_generic.c	Tue Jan 23 16:10:02 2001
--- mpg123-patched/control_generic.c	Fri Oct 12 02:06:42 2001
***************
*** 17,22 ****
--- 17,23 ----
  
  #include "mpg123.h"
  #include "buffer.h"
+ #include "common.h"
  
  #define MODE_STOPPED 0
  #define MODE_PLAYING 1
***************
*** 36,111 ****
      printf("\n");
  }
  
- static double compute_bpf (struct frame *fr)
- {
-     double bpf;
-     if(!fr->bitrate_index) {
-       return fr->freeformatsize + 4;
-     }
- 
-     switch(fr->lay) {
-     case 1:
- 	bpf = tabsel_123[fr->lsf][0][fr->bitrate_index];
- 	bpf *= 12000.0 * 4.0;
- 	bpf /= freqs[fr->sampling_frequency] << (fr->lsf);
- 	break;
-     case 2:
-     case 3:
- 	bpf = tabsel_123[fr->lsf][fr->lay-1][fr->bitrate_index];
- 	bpf *= 144000;
- 	bpf /= freqs[fr->sampling_frequency] << (fr->lsf);
- 	break;
-     default:
- 	bpf = 1.0;
-     }
-     return bpf;
- }
- 
- static double compute_tpf (struct frame *fr)
- {
-     static int bs[4] = { 0, 384, 1152, 1152 };
-     double tpf;
- 
-     tpf = (double) bs[fr->lay];
-     tpf /= freqs[fr->sampling_frequency] << (fr->lsf);
-     return tpf;
- }
- 
- void generic_sendstat (struct frame *fr, int no)
- {
-     long buffsize;
-     double bpf, tpf, tim1, tim2;
-     double dt = 0;
-     int sno, rno;
- 
-     /* this and the 2 above functions are taken from common.c.
-        / maybe the compute_* functions shouldn't be static there
-        / so that they can also used here (performance problems?).
-        / isn't there an easier way to compute the time? */
- 
-     buffsize = xfermem_get_usedspace(buffermem);
-     if (!rd || !fr)
- 	return;
-     bpf = compute_bpf(fr);
-     tpf = compute_tpf(fr);
-     if (buffsize > 0 && ai.rate > 0 && ai.channels > 0) {
- 	dt = (double) buffsize / ai.rate / ai.channels;
- 	if ((ai.format & AUDIO_FORMAT_MASK) == AUDIO_FORMAT_16)
- 	    dt *= .5;
-     }
-     rno = 0;
-     sno = no;
-     if (rd->filelen >= 0) {
- 	long t = rd->tell(rd);
- 	rno = (int)((double)(rd->filelen-t)/bpf);
- 	sno = (int)((double)t/bpf);
-     }
-     tim1 = sno * tpf - dt;
-     tim2 = rno * tpf + dt;
- 
-     generic_sendmsg("F %d %d %3.2f %3.2f %ld", sno, rno, tim1, tim2, (long)(8.0*bpf/tpf));
- }
- 
  extern char *genre_table[];
  extern int genre_count;
  void generic_sendinfoid3 (char *buf)
--- 37,42 ----
***************
*** 137,143 ****
  void control_generic (struct mpstr *mp,struct frame *fr)
  {
      struct timeval tv;
!     fd_set fds;
      int n;
      int mode = MODE_STOPPED;
      int init = 0;
--- 68,74 ----
  void control_generic (struct mpstr *mp,struct frame *fr)
  {
      struct timeval tv;
!     fd_set fds, fdo;
      int n;
      int mode = MODE_STOPPED;
      int init = 0;
***************
*** 156,161 ****
--- 87,93 ----
  	if (mode == MODE_PLAYING) {
  	    n = select(32, &fds, NULL, NULL, &tv);
  	    if (n == 0) {
+ 		int s;
  		if (!read_frame(rd,fr)) {
  		    mode = MODE_STOPPED;
  		    rd->close(rd);
***************
*** 181,187 ****
  		    init = 0;
  		}
  		framecnt++;
! 		generic_sendstat(fr, framecnt);
  	    }
  	}
  	else {
--- 113,130 ----
  		    init = 0;
  		}
  		framecnt++;
! 		while((s = xfermem_get_usedspace(buffermem))){
! 		    struct timeval wait170 = {0, 10000};
! 		    buffer_ignore_lowmem();
! 		    FD_ZERO(&fdo);
! 		    FD_SET(STDOUT_FILENO, &fdo);
! 		    if (select(32, NULL, &fdo, NULL, &wait170)==0){
! 		    	  select(0, NULL, NULL, NULL, &wait170);
! 		    	  continue;
! 		    	  }
! 		    generic_print_stat(rd,fr,framecnt,s,&ai);
! 		    select(0, NULL, NULL, NULL, &wait170);
! 		    }
  	    }
  	}
  	else {
***************
*** 196,202 ****
  	/* exit on error */
  	if (n < 0) {
  	    fprintf(stderr, "Error waiting for command: %s\n", strerror(errno));
! 	    exit(1);
  	}
  
  	/* process command */
--- 139,145 ----
  	/* exit on error */
  	if (n < 0) {
  	    fprintf(stderr, "Error waiting for command: %s\n", strerror(errno));
! //	    exit(1);
  	}
  
  	/* process command */
***************
*** 240,257 ****
  	    if (!cmd || !strlen(cmd))
  		continue;
  
- fprintf(stderr,"CMD: %s\n",cmd);
- 
  	    /* QUIT */
! 	    if (!strcasecmp(cmd, "Q") || !strcasecmp(cmd, "QUIT"))
  		break;
! 
  	    /* LOAD */
  	    if (!strcasecmp(cmd, "L") || !strcasecmp(cmd, "LOAD")) {
  		char *filename;
  		filename = strtok(NULL, "");
  		if (mode != MODE_STOPPED) {
  		    rd->close(rd);
  		    mode = MODE_STOPPED;
  		}
  		open_stream(filename, -1);
--- 183,201 ----
  	    if (!cmd || !strlen(cmd))
  		continue;
  
  	    /* QUIT */
! 	    if (!strcasecmp(cmd, "Q") || !strcasecmp(cmd, "QUIT")) {
! 		buffer_resync();
  		break;
! 		}
! 		
  	    /* LOAD */
  	    if (!strcasecmp(cmd, "L") || !strcasecmp(cmd, "LOAD")) {
  		char *filename;
  		filename = strtok(NULL, "");
  		if (mode != MODE_STOPPED) {
  		    rd->close(rd);
+ 		    buffer_resync();
  		    mode = MODE_STOPPED;
  		}
  		open_stream(filename, -1);
***************
*** 263,274 ****
--- 207,220 ----
  		init = 1;
  		framecnt = 0;
  		read_frame_init(fr);
+ 		
  		continue;
  	    }
  
  	    /* STOP */
  	    if (!strcasecmp(cmd, "S") || !strcasecmp(cmd, "STOP")) {
  		if (mode != MODE_STOPPED) {
+ 		    buffer_resync();
  		    rd->close(rd);
  		    mode = MODE_STOPPED;
  		    generic_sendmsg("P 0");
***************
*** 282,294 ****
  		    continue;
  		if (mode == MODE_PLAYING) {
  		    mode = MODE_PAUSED;
! 		    if (param.usebuffer)
! 			kill(buffer_pid, SIGSTOP);
  		    generic_sendmsg("P 1");
  		} else {
  		    mode = MODE_PLAYING;
  		    if (param.usebuffer)
! 			kill(buffer_pid, SIGCONT);
  		    generic_sendmsg("P 2");
  		}
  		continue;
--- 228,242 ----
  		    continue;
  		if (mode == MODE_PLAYING) {
  		    mode = MODE_PAUSED;
! 		    if (param.usebuffer) 
! 			buffer_stop();
! 
  		    generic_sendmsg("P 1");
  		} else {
  		    mode = MODE_PLAYING;
  		    if (param.usebuffer)
! 			buffer_start();
! 			
  		    generic_sendmsg("P 2");
  		}
  		continue;
***************
*** 296,327 ****
  
  	    /* JUMP */
  	    if (!strcasecmp(cmd, "J") || !strcasecmp(cmd, "JUMP")) {
! 		char *spos;
! 		int pos, ok;
  
! 		spos = strtok(NULL, " \t");
! 		if (!spos)
  		    continue;
! 		if (spos[0] == '-')
! 		    pos = framecnt + atoi(spos);
! 		else if (spos[0] == '+')
! 		    pos = framecnt + atoi(spos+1);
  		else
! 		    pos = atoi(spos);
  
  		if (mode == MODE_STOPPED)
  		    continue;
  		ok = 1;
! 		if (pos < framecnt) {
  		    rd->rewind(rd);
  		    read_frame_init(fr);
! 		    for (framecnt=0; ok && framecnt<pos; framecnt++) {
  			ok = read_frame(rd,fr);
  			if (fr->lay == 3)
  			    set_pointer(fr->sideInfoSize,512);
  		    }
  		} else {
! 		    for (; ok && framecnt<pos; framecnt++) {
  			ok = read_frame(rd,fr);
  			if (fr->lay == 3)
  			    set_pointer(fr->sideInfoSize,512);
--- 244,275 ----
  
  	    /* JUMP */
  	    if (!strcasecmp(cmd, "J") || !strcasecmp(cmd, "JUMP")) {
! 		char *soffset;
! 		int offset, ok;
  
! 		soffset = strtok(NULL, " \t");
! 		if (!soffset)
  		    continue;
! 		if (soffset[0] == '-')
! 		    offset = framecnt - atoi(soffset+1);
! 		else if (soffset[0] == '+')
! 		    offset = framecnt + atoi(soffset+1);
  		else
! 		    offset = framecnt;
  
  		if (mode == MODE_STOPPED)
  		    continue;
  		ok = 1;
! 		if (offset < framecnt) {
  		    rd->rewind(rd);
  		    read_frame_init(fr);
! 		    for (framecnt=0; ok && framecnt<offset; framecnt++) {
  			ok = read_frame(rd,fr);
  			if (fr->lay == 3)
  			    set_pointer(fr->sideInfoSize,512);
  		    }
  		} else {
! 		    for (; ok && framecnt<offset; framecnt++) {
  			ok = read_frame(rd,fr);
  			if (fr->lay == 3)
  			    set_pointer(fr->sideInfoSize,512);
diff -d --new-file -r -c mpg123/control_generic.h mpg123-patched/control_generic.h
*** mpg123/control_generic.h	Thu Jan  1 01:00:00 1970
--- mpg123-patched/control_generic.h	Fri Oct 12 02:09:42 2001
***************
*** 0 ****
--- 1 ----
+ void generic_sendmsg (char *, ...);
diff -d --new-file -r -c mpg123/mpg123.c mpg123-patched/mpg123.c
*** mpg123/mpg123.c	Thu Jan 18 15:00:35 2001
--- mpg123-patched/mpg123.c	Fri Oct 12 02:01:09 2001
***************
*** 903,912 ****
  		}
  		if(leftFrames > 0)
  		    leftFrames--;
! 		if(!play_frame(mp,init,fr)) {
!                     fprintf(stderr,"Error in Frame\n");
! 		    break;
!                 }
  		init = 0;
  
  		if(param.verbose) {
--- 903,910 ----
  		}
  		if(leftFrames > 0)
  		    leftFrames--;
! 		if(!play_frame(mp,init,fr)) 
! 			sync_stream(rd,fr,0xffff,NULL);
  		init = 0;
  
  		if(param.verbose) {
diff -d --new-file -r -c mpg123/mpg123.h mpg123-patched/mpg123.h
*** mpg123/mpg123.h	Tue Jan 23 18:58:28 2001
--- mpg123-patched/mpg123.h	Sat Sep 22 16:32:04 2001
***************
*** 398,403 ****
--- 398,404 ----
  extern void huffman_decoder(int ,int *);
  extern void huffman_count1(int,int *);
  extern void print_stat(struct reader *rd,struct frame *fr,int no,long buffsize,struct audio_info_struct *ai);
+ extern void generic_print_stat(struct reader *rd,struct frame *fr,int no,long buffsize,struct audio_info_struct *ai);
  extern int get_songlen(struct reader *rd,struct frame *fr,int no);
  
  extern void init_layer3(int);
